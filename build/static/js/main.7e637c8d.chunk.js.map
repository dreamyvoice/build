{"version":3,"sources":["components/Login.js","components/Main.js","App.js","index.js"],"names":["Login","props","state","username","password","handleSubmit","bind","handleChange","this","axios","post","process","then","res","localStorage","setItem","data","handleStatus","catch","err","setState","response","status","alert","e","target","name","value","className","onSubmit","preventDefault","type","placeholder","onChange","onClick","Component","withRouter","Main","handleLogout","removeItem","changeLoginStatus","App","isLogin","get","headers","Authorization","getItem","isConnectedToDatabase","console","log","require","config","ReactDOM","render","document","getElementById"],"mappings":"yRAKMA,E,kDAMJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IANRC,MAAQ,CACNC,SAAU,GACVC,SAAU,IAKV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAHH,E,gDAMnB,WAAgB,IAAD,SACkBE,KAAKN,MAA5BC,EADK,EACLA,SAAUC,EADL,EACKA,SAElBK,IACGC,KADH,UAEOC,8DAFP,WAGI,CACER,WACAC,aAGHQ,MAAK,SAAAC,GACJC,aAAaC,QAAQ,cAAeF,EAAIG,MACxC,EAAKf,MAAMgB,kBAEZC,OAAM,SAAAC,GACL,EAAKC,SAAS,CACZjB,SAAU,GACVC,SAAU,KAEgB,MAAxBe,EAAIE,SAASC,QACfC,MAAM,mH,0BAKd,SAAaC,GACXhB,KAAKY,SAAL,eACGI,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,oBAI9B,WACE,OACE,qBAAKC,UAAU,iBAAf,SACE,uBAAMA,UAAU,aAAaC,SAAU,SAAAL,GAAC,OAAIA,EAAEM,kBAA9C,UACE,qBAAKF,UAAU,QAAf,mBACA,uBACEG,KAAK,OACLL,KAAK,WACLM,YAAY,eACZL,MAAOnB,KAAKN,MAAMC,SAClB8B,SAAUzB,KAAKD,eAEjB,uBACEwB,KAAK,WACLL,KAAK,WACLM,YAAY,2BACZL,MAAOnB,KAAKN,MAAME,SAClB6B,SAAUzB,KAAKD,eAGjB,wBAAQwB,KAAK,SAASG,QAAS1B,KAAKH,aAApC,yC,GAhEU8B,aAuELC,cAAWpC,GCpDXqC,G,wDApBb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDqC,aAAe,EAAKA,aAAahC,KAAlB,gBAFH,E,gDAKnB,WACEQ,aAAayB,WAAW,eACxB/B,KAAKP,MAAMuC,sB,oBAGb,WACE,OACE,sBAAKZ,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,6CACA,wBAAQG,KAAK,SAASG,QAAS1B,KAAK8B,aAApC,6C,GAfWH,cCsEJM,G,wDA5Db,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IANRC,MAAQ,CACNwC,SAAS,EACTpB,OAAQ,IAKR,EAAKL,aAAe,EAAKA,aAAaX,KAAlB,gBACpB,EAAKkC,kBAAoB,EAAKA,kBAAkBlC,KAAvB,gBAHR,E,qDAMnB,WACEE,KAAKS,iB,0BAGP,WAAgB,IAAD,OACbR,IACGkC,IADH,UACUhC,8DADV,WACkD,CAC9CiC,QAAS,CACPC,cAAc,UAAD,OAAY/B,aAAagC,QAAQ,mBAGjDlC,MAAK,SAACC,GACL,EAAKO,SAAS,CACZsB,QAAS7B,EAAIG,KAAK0B,QAClBpB,OAAQT,EAAIG,KAAK+B,2BAGpB7B,OAAM,SAACC,GAAD,OAAS6B,QAAQC,IAAI9B,Q,+BAGhC,WACEX,KAAKY,SAAS,CACZsB,SAAS,EACTpB,OAAQ,O,oBAIZ,WAAU,IACAoB,EAAYlC,KAAKN,MAAjBwC,QAER,OACE,qBAAKd,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACGc,EAEG,qCACE,qBAAKd,UAAU,UAAf,2EACA,cAAC,EAAD,CAAMY,kBAAmBhC,KAAKgC,uBAIhC,qCACE,qBAAKZ,UAAU,SAAf,qJAGA,cAAC,EAAD,CAAOX,aAAcT,KAAKS,0B,GAzDxBkB,c,QCHlBe,EAAQ,IAAUC,SAElBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e637c8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit() {\n    const { username, password } = this.state;\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/signin`,\n        {\n          username,\n          password\n        }\n      )\n      .then(res => {\n        localStorage.setItem('accessToken', res.data);\n        this.props.handleStatus();\n      })\n      .catch(err => {\n        this.setState({\n          username: '',\n          password: ''\n        });\n        if (err.response.status === 401) {\n          alert('이름과 비밀번호를 정확히 입력해주세요!');\n        }\n      });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <form className=\"form-items\" onSubmit={e => e.preventDefault()}>\n          <div className=\"login\">Login</div>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"이름\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\" onClick={this.handleSubmit}>로그인</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport './Main.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    localStorage.removeItem('accessToken');\n    this.props.changeLoginStatus();\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"session\">로그인 성공</div>\n        <button type=\"submit\" onClick={this.handleLogout}>로그아웃</button>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLogin: false,\n    status: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.changeLoginStatus = this.changeLoginStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleStatus();\n  }\n\n  handleStatus() {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/status`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      })\n      .then((res) => {\n        this.setState({\n          isLogin: res.data.isLogin,\n          status: res.data.isConnectedToDatabase\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  changeLoginStatus() {\n    this.setState({\n      isLogin: false,\n      status: ''\n    });\n  }\n\n  render() {\n    const { isLogin } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          {isLogin\n            ? (\n              <>\n                <div className=\"success\">로그인에 성공했습니다</div>\n                <Main changeLoginStatus={this.changeLoginStatus} />\n              </>\n            )\n            : (\n              <>\n                <div className=\"status\">\n                이름에는 김코딩,비밀번호에는 1234만 입력 가능합니다\n                </div>\n                <Login handleStatus={this.handleStatus} />\n              </>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}